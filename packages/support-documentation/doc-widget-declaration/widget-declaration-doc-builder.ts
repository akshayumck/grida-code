import type { Declaration, FunctionDeclaration, Identifier } from "coli";
import type { WidgetModuleInfo, PropsInfo, PropsDefaultValues } from "./types";
export abstract class WidgetDeclarationDocBuilder {
  /**
   * package info
   *
   * @alpha TODO: not supported
   */
  readonly module: WidgetModuleInfo;

  /**
   * the widget declaration token
   */
  readonly declaration: FunctionDeclaration;

  /**
   * @alpha TODO: not supported
   */
  readonly params: PropsInfo;

  /**
   * @alpha TODO: not supported
   */
  readonly defaultValues: PropsDefaultValues;

  constructor() {
    //
  }

  protected get anonymous(): boolean {
    return this.declaration.id === undefined;
  }

  protected get widgetname(): string {
    if (this.anonymous) {
      // anonymous default export
      return "Widget"; // for building example
    } else {
      return this.declaration.id!.name;
    }
  }

  protected abstract partIntro();

  protected abstract partExample();

  protected abstract partParams();

  protected abstract partPreview();

  protected abstract partRemarks();

  protected partPrivateRemarks() {
    return `Code generated by grida.co | engine v2022.1.0 (Apache-2.0) | Generated code under CC0 (public domain) *This code is free to use, modify, and redistribute. (aknowledgment is not required)*`;
  }

  protected partBrandingFooter() {
    //
    const img_logo_32_madewithgrida = "";
    const img_artwork_footer_branding = "";
  }

  protected abstract partGridaMetaComment();
}
